{"version":3,"sources":["null","ng://angular-instantsearch/utils.ts","ng://angular-instantsearch/base-widget.ts","ng://angular-instantsearch/version.ts","ng://angular-instantsearch/instantsearch/instantsearch.ts","ng://angular-instantsearch/breadcrumb/breadcrumb.ts","ng://angular-instantsearch/breadcrumb/breadcrumb.module.ts","ng://angular-instantsearch/clear-refinements/clear-refinements.ts","ng://angular-instantsearch/clear-refinements/clear-refinements.module.ts","ng://angular-instantsearch/current-refinements/current-refinements.ts","ng://angular-instantsearch/current-refinements/current-refinements.module.ts","ng://angular-instantsearch/hierarchical-menu/hierarchical-menu.ts","ng://angular-instantsearch/hierarchical-menu/hierarchical-menu-item.ts","ng://angular-instantsearch/hierarchical-menu/hierarchical-menu.module.ts","ng://angular-instantsearch/hits-per-page/hits-per-page.ts","ng://angular-instantsearch/hits-per-page/hits-per-page.module.ts","ng://angular-instantsearch/highlight/highlight.ts","ng://angular-instantsearch/highlight/highlight.module.ts","ng://angular-instantsearch/hits/hits.ts","ng://angular-instantsearch/hits/hits.module.ts","ng://angular-instantsearch/infinite-hits/infinite-hits.ts","ng://angular-instantsearch/infinite-hits/infinite-hits.module.ts","ng://angular-instantsearch/instantsearch/instantsearch.module.ts","ng://angular-instantsearch/menu/menu.ts","ng://angular-instantsearch/menu/menu.module.ts","ng://angular-instantsearch/numeric-menu/numeric-menu.ts","ng://angular-instantsearch/numeric-menu/numeric-menu.module.ts","ng://angular-instantsearch/numeric-selector/numeric-selector.ts","ng://angular-instantsearch/numeric-selector/numeric-selector.module.ts","ng://angular-instantsearch/pagination/pagination.ts","ng://angular-instantsearch/pagination/pagination.module.ts","ng://angular-instantsearch/range-slider/range-slider.ts","ng://angular-instantsearch/range-slider/range-slider.module.ts","ng://angular-instantsearch/refinement-list/refinement-list.ts","ng://angular-instantsearch/refinement-list/facets-search.ts","ng://angular-instantsearch/refinement-list/refinement-list.module.ts","ng://angular-instantsearch/search-box/search-box.ts","ng://angular-instantsearch/search-box/search-box.module.ts","ng://angular-instantsearch/sort-by/sort-by.ts","ng://angular-instantsearch/sort-by/sort-by.module.ts","ng://angular-instantsearch/rating-menu/rating-menu.ts","ng://angular-instantsearch/rating-menu/rating-menu.module.ts","ng://angular-instantsearch/stats/stats.ts","ng://angular-instantsearch/stats/stats.module.ts","ng://angular-instantsearch/toggle/toggle.ts","ng://angular-instantsearch/toggle/toggle.module.ts","ng://angular-instantsearch/range-input/range-input.ts","ng://angular-instantsearch/range-input/range-input.module.ts","ng://angular-instantsearch/panel/panel.ts","ng://angular-instantsearch/panel/panel.module.ts","ng://angular-instantsearch/configure/configure.ts","ng://angular-instantsearch/configure/configure.module.ts","ng://angular-instantsearch/create-ssr-algolia-client.ts","ng://angular-instantsearch/index.ts","ng://angular-instantsearch/parse-server-request.ts"],"names":["extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","bem","widgetName","element","subElement","scoppedWidgetName","parseNumberInput","input","parseInt","noop","args","_i","BaseWidget","_this","state","updateState","isFirstRendering","Promise","resolve","then","cx","createWidget","connector","options","widget","ngOnInit","instantSearchParent","addWidget","ngOnDestroy","isPlatformBrowser","platformId","removeWidget","getItemClass","item","className","isRefined","Input","VERSION","algoliasearch","algoliasearchProxy.default","algoliasearchProxy","NgAisInstantSearch","instanceName","change","EventEmitter","onRender","emit","results","instantSearchInstance","helper","lastResults","createInstantSearchInstance","config","ngAfterViewInit","start","removeListener","dispose","searchParameters","highlightPreTag","highlightPostTag","urlSync","routing","searchClient","createAlgoliaClient","client","appId","apiKey","addAlgoliaAgent","undefined","instantsearch","on","refresh","Component","selector","template","decorators","type","Inject","PLATFORM_ID","Output","NgAisBreadcrumb","_super","createURL","items","refine","tslib_1.__extends","defineProperty","autoHideContainer","map","idx","separator","isLast","connectBreadcrumb","attributes","rootPath","handleClick","event","preventDefault","stopPropagation","value","forwardRef","NgAisBreadcrumbModule","NgModule","declarations","entryComponents","exports","imports","CommonModule","NgAisClearRefinements","buttonLabel","clearsQuery","excludeAttributes","hasRefinements","connectClearAll","NgAisClearRefinementsModule","NgAisCurrentRefinements","clearRefinements","clearRefinementsLabel","onlyListedAttributes","clearAllClick","clearAllURL","refinements","transformItems","reduce","res","_a","attributeName","refinement","e","indexOf","getOwnPropertySymbols","__rest","match","find","r","push","label","charAt","toUpperCase","slice","JSON","stringify","connectCurrentRefinedValues","handleClearAllClick","NgAisCurrentRefinementsModule","NgAisHierarchicalMenu","limit","connectHierarchicalMenu","showParentLevel","sortBy","NgAisHierarchicalMenuItem","lvl","isArray","data","getListClass","potentialArray","NgAisHierarchicalMenuModule","NgAisHitsPerPage","connectHitsPerPage","NgAisHitsPerPageModule","get","require","NgAisHighlight","tagName","attribute","hit","highlighted","replaceWithTagName","attributeHighlighted","_highlightResult","fallback","console","warn","replace","RegExp","NgAisHighlightModule","NgAisHits","hits","connectHits","escapeHits","ContentChild","TemplateRef","NgAisHitsModule","NgAisInfiniteHits","showMoreLabel","isLastPage","showMore","connectInfiniteHits","NgAisInfiniteHitsModule","NgAisInstantSearchModule","forRoot","ngModule","providers","NgAisMenu","showLessLabel","canRefine","canToggleShowMore","isShowingMore","toggleShowMore","connectMenu","showMoreLimit","NgAisMenuModule","NgAisNumericMenu","connectNumericRefinementList","NgAisNumericMenuModule","NgAisNumericSelector","operator","currentRefinement","connectNumericSelector","NgAisNumericSelectorModule","range","NgAisPagination","showFirst","showLast","showPrevious","showNext","padding","nbHits","nbPages","pagesArray","apply","Number","pagesPadding","minDelta","maxDelta","Math","abs","connectPagination","maxPages","totalPages","page","NgAisPaginationModule","NgAisRangeSlider","pips","tooltips","precision","min","max","animate","behaviour","connect","step","to","formatTooltip","density","mode","stepped","values","slider","noUiSlider.create","sliderContainer","nativeElement","noUiSlider","handleChange","disabled","updateOptions","toFixed","pow","connectRange","ViewChild","NgAisRangeSliderModule","NgAisRefinementList","searchPlaceholder","searchForItems","isFormSearch","connectRefinementList","escapeFacetValues","NgAisFacetsSearch","searchQuery","search","handleSubmit","NgAisRefinementListModule","NgAisSearchBox","placeholder","submitTitle","resetTitle","searchAsYouType","autofocus","submit","reset","focus","blur","query","connectSearchBox","searchBox","handleReset","NgAisSearchBoxModule","NgAisSortBy","connectSortBySelector","indices","NgAisSortByModule","NgAisRatingMenu","andUpLabel","hasNoResults","connectStarRating","NgAisRatingMenuModule","NgAisStats","hitPerPage","processingTimeMS","connectStats","NgAisStatsModule","NgAisToggle","off","connectToggle","NgAisToggleModule","NgAisRangeInput","currency","submitLabel","minInputValue","maxInputValue","target","NgAisRangeInputModule","NgAisPanel","NgAisPanelModule","NgAisConfigure","differs","internalSearchParameters","differ","connectConfigure","ngDoCheck","diff","KeyValueDiffers","NgAisConfigureModule","encode","encodeProxy.default","encodeProxy","createSSRSearchClient","httpClient","HttpHeaders","transferState","makeStateKey","_request","rawUrl","opts","headers","set","method","url","includes","transferStateKey","body","hasKey","resp","parse","statusCode","status","reject","request","observe","subscribe","NGIS_MODULES","NgAisRootModule","NgAisModule","_","req","split","AlgoliaSearchHelper","getConfigurationFromQueryString"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export function bem(widgetName: string) {\n  const cx = function(element?: string, subElement?: string) {\n    if (element) {\n      const scoppedWidgetName = `ais-${widgetName}-${element}`;\n\n      // output `ais-Widget-Header|Body|Footer ais-Header|Body|Footer`\n      if (element === 'header' || element === 'body' || element === 'footer') {\n        const nonScoppedWidgetName = `ais-${element}`;\n        return `${scoppedWidgetName} ${nonScoppedWidgetName}`;\n      }\n\n      // output `ais-Widget-Xyz--abc`\n      if (subElement) {\n        return `${scoppedWidgetName}--${subElement}`;\n      }\n\n      // output `ais-Widget-Xyz`\n      return scoppedWidgetName;\n    }\n\n    // output `ais-Widget`\n    return `ais-${widgetName}`;\n  };\n  return cx;\n}\n\nexport function parseNumberInput(input?: number | string) {\n  return typeof input === 'string' ? parseInt(input, 10) : input;\n}\n\nexport function noop(...args: any[]): void {}\n\nexport function capitalize(s) {\n  return s.charAt(0).toUpperCase() + s.slice(1);\n}\n","import { Input, OnDestroy, OnInit } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { bem, noop } from './utils';\n\nexport class Widget {\n  public init: () => void;\n  public getConfiguration: () => object;\n  public render: (\n    params: {\n      templatesConfig: object;\n      state: object;\n      results: {}[];\n      createURL: (value: any) => string;\n      instantSearchInstance: object;\n    }\n  ) => void;\n  public dispose: (\n    params: {\n      helper: object;\n      state: object;\n    }\n  ) => object | void;\n}\n\nexport type Connector = (\n  renderFn: (state: object, isFirstRendering: boolean) => void,\n  unmountFn: () => void\n) => (widgetOptions?: object) => Widget;\n\nexport class BaseWidget implements OnInit, OnDestroy {\n  public instantSearchParent: any;\n\n  @Input() public autoHideContainer?: boolean;\n\n  public widget?: Widget;\n  public state?: object = {};\n  public cx: Function;\n\n  constructor(widgetName: string) {\n    this.cx = bem(widgetName);\n  }\n\n  public createWidget(connector: Connector, options: object = {}) {\n    this.widget = connector(this.updateState, noop)(options);\n  }\n\n  public ngOnInit() {\n    // add widget to the InstantSearch Instance\n    this.instantSearchParent.addWidget(this.widget);\n  }\n\n  public ngOnDestroy() {\n    if (isPlatformBrowser(this.instantSearchParent.platformId)) {\n      this.instantSearchParent.removeWidget(this.widget);\n    }\n  }\n\n  public updateState = (\n    state: {},\n    isFirstRendering: boolean\n  ): Promise<void> | void => {\n    if (isFirstRendering) {\n      return Promise.resolve().then(() => {\n        this.state = state;\n      });\n    }\n\n    this.state = state;\n  };\n\n  // helper method for genering item list className\n  public getItemClass(item: { isRefined?: boolean }) {\n    let className = this.cx('item');\n\n    if (item.isRefined) {\n      className = `${className} ${this.cx('item', 'selected')}`;\n    }\n\n    return className;\n  }\n}\n","export const VERSION = \"2.1.0\";\n","import {\n  AfterViewInit,\n  Component,\n  Input,\n  OnInit,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  Inject,\n  PLATFORM_ID,\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport * as algoliasearchProxy from 'algoliasearch/lite';\n\nimport instantsearch from 'instantsearch.js/es';\n\nimport { AlgoliaSearchHelper } from 'algoliasearch-helper';\n\nimport { Widget } from '../base-widget';\nimport { VERSION } from '../version';\n\nconst algoliasearch = algoliasearchProxy.default || algoliasearchProxy;\n\nexport type SearchRequest = {\n  indexName: string;\n  params: SearchRequestParameters;\n};\n\nexport type SearchForFacetValuesRequest = {\n  indexName: string;\n  params: SearchForFacetValuesRequestParameters;\n};\n\n// Documentation: https://www.algolia.com/doc/api-reference/search-api-parameters/\nexport type SearchParameters = {\n  // Attributes\n  attributesToRetrieve?: string[];\n  restrictSearchableAttributes?: string[];\n\n  // Filtering\n  filters?: string;\n  facetFilters?: string[];\n  optionalFilters?: string[];\n  numericFilters?: string[];\n  sumOrFiltersScores?: boolean;\n\n  // Faceting\n  facets?: string[];\n  maxValuesPerFacet?: number;\n  facetingAfterDistinct?: boolean;\n  sortFacetValuesBy?: string;\n\n  // Highlighting / Snippeting\n  attributesToHighlight?: string[];\n  attributesToSnippet?: string[];\n  highlightPreTag?: string;\n  highlightPostTag?: string;\n  snippetEllipsisText?: string;\n  restrictHighlightAndSnippetArrays?: boolean;\n\n  // Pagination\n  page?: number;\n  hitsPerPage?: number;\n  offset?: number;\n  length?: number;\n\n  // Typos\n  minWordSizefor1Typo?: number;\n  minWordSizefor2Typos?: number;\n  typoTolerance?: string | boolean;\n  allowTyposOnNumericTokens?: boolean;\n  ignorePlurals?: boolean | string[];\n  disableTypoToleranceOnAttributes?: string[];\n\n  // Geo-Search\n  aroundLatLng?: string;\n  aroundLatLngViaIP?: boolean;\n  aroundRadius?: number | 'all';\n  aroundPrecision?: number;\n  minimumAroundRadius?: number;\n  insideBoundingBox?: GeoRectangle | GeoRectangle[];\n  insidePolygon?: GeoPolygon | GeoPolygon[];\n\n  // Query Strategy\n  queryType?: string;\n  removeWordsIfNoResults?: string;\n  advancedSyntax?: boolean;\n  optionalWords?: string | string[];\n  removeStopWords?: boolean | string[];\n  disableExactOnAttributes?: string[];\n  exactOnSingleWordQuery?: string;\n  alternativesAsExact?: string[];\n\n  // Query Rules\n  enableRules?: boolean;\n  ruleContexts?: string[];\n\n  // Advanced\n  minProximity?: number;\n  responseFields?: string[];\n  maxFacetHits?: number;\n  percentileComputation?: boolean;\n  distinct?: number | boolean;\n  getRankingInfo?: boolean;\n  clickAnalytics?: boolean;\n  analytics?: boolean;\n  analyticsTags?: string[];\n  synonyms?: boolean;\n  replaceSynonymsInHighlight?: boolean;\n};\n\nexport interface SearchRequestParameters extends SearchParameters {\n  query: string;\n}\n\nexport interface SearchForFacetValuesRequestParameters\n  extends SearchParameters {\n  facetQuery: string;\n  facetName: string;\n}\n\nexport type GeoRectangle = [number, number, number, number];\nexport type GeoPolygon = [number, number, number, number, number, number];\n\n// Documentation: https://www.algolia.com/doc/rest-api/search/?language=javascript#search-multiple-indexes\nexport type SearchResponse = {\n  hits: Hit[];\n  page?: number;\n  nbHits?: number;\n  nbPages?: number;\n  hitsPerPage?: number;\n  processingTimeMS?: number;\n  query?: string;\n  params?: string;\n  index?: string;\n};\n\nexport type Hit = {\n  _highlightResult?: object;\n};\n\n// Documentation: https://www.algolia.com/doc/rest-api/search/?language=javascript#search-for-facet-values\nexport type SearchForFacetValuesResponse = {\n  value: string;\n  highlighted?: string;\n  count?: number;\n};\n\nexport type SearchClient = {\n  search: (requests: SearchRequest[]) => Promise<{ results: SearchResponse[] }>;\n  searchForFacetValues?: (\n    requests: SearchForFacetValuesRequest[]\n  ) => Promise<{ facetHits: SearchForFacetValuesResponse[] }[]>;\n};\n\nexport type InstantSearchConfig = {\n  appId?: string;\n  apiKey?: string;\n  indexName: string;\n\n  numberLocale?: string;\n  searchFunction?: (helper: any) => void;\n  createAlgoliaClient?: (\n    algoliasearch: Function,\n    appId: string,\n    apiKey: string\n  ) => object;\n  searchClient?: SearchClient;\n  searchParameters?: SearchParameters | void;\n  urlSync?:\n    | boolean\n    | {\n        mapping?: object;\n        threshold?: number;\n        trackedParameters?: string[];\n        useHash?: boolean;\n        getHistoryState?: () => object;\n      };\n  routing?:\n    | boolean\n    | {\n        stateMapping?: {\n          stateToRoute(object): object;\n          routeToState(object): object;\n        };\n      };\n};\n\nexport class InstantSearchInstance {\n  public start: () => void;\n\n  public addWidget: (widget: Widget) => void;\n  public addWidgets: (widgets: Widget[]) => void;\n\n  public removeWidget: (widget: Widget) => void;\n  public removeWidgets: (widgets: Widget[]) => void;\n\n  // EventEmmiter\n  public on: (eventName: string, callback: Function) => void;\n  public removeListener: (eventName: string, callback: Function) => void;\n\n  public helper: {\n    lastResults: Object;\n    state: Object;\n  };\n\n  public refresh: () => void;\n  public dispose: () => void;\n}\n\n@Component({\n  selector: 'ais-instantsearch',\n  template: `<ng-content></ng-content>`,\n})\nexport class NgAisInstantSearch implements AfterViewInit, OnInit, OnDestroy {\n  @Input() public config: InstantSearchConfig;\n  @Input() public instanceName: string = 'default';\n\n  @Output()\n  change: EventEmitter<{ results: {}; state: {} }> = new EventEmitter<{\n    results: {};\n    state: {};\n  }>();\n\n  public instantSearchInstance: InstantSearchInstance;\n\n  constructor(@Inject(PLATFORM_ID) private platformId: Object) {}\n\n  public ngOnInit() {\n    this.createInstantSearchInstance(this.config);\n  }\n\n  public ngAfterViewInit() {\n    this.instantSearchInstance.start();\n  }\n\n  public ngOnDestroy() {\n    this.instantSearchInstance.removeListener('render', this.onRender);\n    this.instantSearchInstance.dispose();\n  }\n\n  public createInstantSearchInstance(config: InstantSearchConfig) {\n    // add default searchParameters with highlighting config\n    if (!config.searchParameters) config.searchParameters = {};\n    Object.assign(config.searchParameters, {\n      highlightPreTag: '__ais-highlight__',\n      highlightPostTag: '__/ais-highlight__',\n    });\n\n    // remove URLSync widget if on SSR\n    if (!isPlatformBrowser(this.platformId)) {\n      if (typeof config.urlSync !== 'undefined') delete config.urlSync;\n      if (typeof config.routing !== 'undefined') delete config.routing;\n    }\n\n    // custom algolia client agent\n    if (!config.searchClient && !config.createAlgoliaClient) {\n      const client = algoliasearch(config.appId, config.apiKey);\n      client.addAlgoliaAgent(`angular-instantsearch ${VERSION}`);\n\n      config.searchClient = client;\n      config.appId = undefined;\n      config.apiKey = undefined;\n    }\n\n    this.instantSearchInstance = instantsearch(config);\n    this.instantSearchInstance.on('render', this.onRender);\n  }\n\n  public addWidget(widget: Widget) {\n    this.instantSearchInstance.addWidget(widget);\n  }\n\n  public removeWidget(widget: Widget) {\n    this.instantSearchInstance.removeWidget(widget);\n  }\n\n  public refresh() {\n    this.instantSearchInstance.refresh();\n  }\n\n  onRender = () => {\n    this.change.emit({\n      results: this.instantSearchInstance.helper.lastResults,\n      state: this.instantSearchInstance.helper.state,\n    });\n  };\n}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\nimport { connectBreadcrumb } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\nexport type BreadcrumbState = {\n  createURL: Function;\n  items: BreadcrumbItem[];\n  refine: Function;\n};\n\nexport type BreadcrumbItem = {\n  name: string;\n  value: string;\n};\n\n@Component({\n  selector: 'ais-breadcrumb',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <ul [class]=\"cx('list')\">\n        <li\n          *ngFor=\"let item of items\"\n          [class]=\"cx('item', item.isLast ? 'selected' : undefined)\"\n          (click)=\"handleClick($event, item)\"\n        >\n          <span\n            *ngIf=\"item.separator\"\n            [class]=\"cx('separator')\"\n            aria-hidden=\"true\"\n          >\n            >\n          </span>\n          <a\n            [class]=\"cx('link')\"\n            href=\"{{state.createURL(item.value)}}\"\n            *ngIf=\"!item.isLast\"\n            (click)=\"handleClick($event, item)\"\n          >\n            {{item.name}}\n          </a>\n\n          <span *ngIf=\"item.isLast\">\n            {{item.name}}\n          </span>\n        </li>\n      </ul>\n    </div>\n  `,\n})\nexport class NgAisBreadcrumb extends BaseWidget {\n  // connector options\n  @Input() public attributes: string[];\n  @Input() public rootPath?: string;\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  get items() {\n    return this.state.items.map((item, idx) => ({\n      ...item,\n      separator: idx !== 0,\n      isLast: idx === this.state.items.length - 1,\n    }));\n  }\n\n  public state: BreadcrumbState = {\n    createURL: noop,\n    items: [],\n    refine: noop,\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('Breadcrumb');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectBreadcrumb, {\n      attributes: this.attributes,\n      rootPath: this.rootPath,\n    });\n\n    super.ngOnInit();\n  }\n\n  public handleClick(event: MouseEvent, item: BreadcrumbItem) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (item.value) {\n      this.state.refine(item.value);\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisBreadcrumb } from './breadcrumb';\n\n@NgModule({\n  declarations: [NgAisBreadcrumb],\n  entryComponents: [NgAisBreadcrumb],\n  exports: [NgAisBreadcrumb],\n  imports: [CommonModule],\n})\nexport class NgAisBreadcrumbModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\nimport { connectClearAll } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\n@Component({\n  selector: 'ais-clear-refinements',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <button\n        [class]=\"cx('button') + (!state.hasRefinements ? (' ' + cx('button', 'disabled')) : '')\"\n        (click)=\"handleClick($event)\"\n        [disabled]=\"!state.hasRefinements\"\n      >\n        {{buttonLabel}}\n      </button>\n    </div>\n  `,\n})\nexport class NgAisClearRefinements extends BaseWidget {\n  @Input() public buttonLabel: string = 'Clear refinements';\n  @Input() public clearsQuery: boolean = false;\n  @Input() public excludeAttributes: string[] = [];\n\n  public state = {\n    hasRefinements: false,\n    refine: noop,\n  };\n\n  get isHidden() {\n    return !this.state.hasRefinements && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('ClearRefinements');\n  }\n\n  public ngOnInit() {\n    // we need to `createWidget` from `ngOnInit` to have `@Input()` intialized\n    this.createWidget(connectClearAll, {\n      clearsQuery: this.clearsQuery,\n      excludeAttributes: this.excludeAttributes,\n    });\n\n    super.ngOnInit();\n  }\n\n  public handleClick(event: MouseEvent) {\n    event.preventDefault();\n\n    if (this.state.hasRefinements) {\n      this.state.refine();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisClearRefinements } from './clear-refinements';\n\n@NgModule({\n  declarations: [NgAisClearRefinements],\n  entryComponents: [NgAisClearRefinements],\n  exports: [NgAisClearRefinements],\n  imports: [CommonModule],\n})\nexport class NgAisClearRefinementsModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\n\nimport { connectCurrentRefinedValues } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop, capitalize } from '../utils';\n\nexport type CurrentRefinementsState = {\n  attributes: {};\n  clearAllClick: Function;\n  clearAllURL: Function;\n  createURL: Function;\n  refine: Function;\n  refinements: {}[];\n};\n\n@Component({\n  selector: 'ais-current-refinements',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <button\n        [class]=\"cx('reset')\"\n        (click)=\"handleClearAllClick($event)\"\n        *ngIf=\"clearRefinements === 'before' || clearRefinements === true\">\n        {{clearRefinementsLabel}}\n      </button>\n\n      <ul\n        [class]=\"cx('list')\"\n        *ngFor=\"let refinement of refinements\"\n      >\n        <li [class]=\"cx('item')\">\n          <span [class]=\"cx('label')\">{{refinement.label}}:</span>\n\n          <span\n            [class]=\"cx('category')\"\n            *ngFor=\"let item of refinement.items\"\n          >\n            <span [class]=\"cx('categoryLabel')\">{{item.name}}</span>\n            <button [class]=\"cx('delete')\" (click)=\"handleClick($event, item)\">â</button>\n          </span>\n        </li>\n      </ul>\n\n      <button\n        [class]=\"cx('reset')\"\n        (click)=\"handleClearAllClick($event)\"\n        *ngIf=\"clearRefinements === 'after'\">\n        {{clearRefinementsLabel}}\n      </button>\n    </div>\n  `,\n})\nexport class NgAisCurrentRefinements extends BaseWidget {\n  // render options\n  @Input() public clearRefinements: 'before' | 'after' | boolean = 'after';\n  @Input() public clearRefinementsLabel: string = 'Clear refinements';\n  @Input() public transformItems?: Function;\n\n  // connector options\n  @Input() public onlyListedAttributes: boolean = false;\n  @Input() public clearsQuery: boolean = false;\n  @Input()\n  public attributes: {\n    name: string;\n    label: string;\n  }[] = [];\n\n  public state: CurrentRefinementsState = {\n    attributes: {},\n    clearAllClick: noop,\n    clearAllURL: noop,\n    createURL: noop,\n    refine: noop,\n    refinements: [],\n  };\n\n  get isHidden() {\n    return this.state.refinements.length === 0 && this.autoHideContainer;\n  }\n\n  get refinements() {\n    const items =\n      typeof this.transformItems === 'function'\n        ? this.transformItems(this.state.refinements)\n        : this.state.refinements;\n\n    // group refinements by category? (attributeName && type)\n    return items.reduce((res, { type, attributeName, ...refinement }) => {\n      const match = res.find(\n        r => r.attributeName === attributeName && r.type === type\n      );\n      if (match) {\n        match.items.push({ type, attributeName, ...refinement });\n      } else {\n        res.push({\n          type,\n          attributeName,\n          label: capitalize(attributeName),\n          items: [{ type, attributeName, ...refinement }],\n        });\n      }\n      return res;\n    }, []);\n  }\n\n  get json() {\n    return JSON.stringify(this.refinements, null, 4);\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('CurrentRefinements');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectCurrentRefinedValues, {\n      attributes: this.attributes,\n      clearsQuery: this.clearsQuery,\n      onlyListedAttributes: this.onlyListedAttributes,\n    });\n    super.ngOnInit();\n  }\n\n  public handleClick(event: MouseEvent, refinement: {}) {\n    event.preventDefault();\n    this.state.refine(refinement);\n  }\n\n  public handleClearAllClick(event: MouseEvent) {\n    event.preventDefault();\n    this.state.clearAllClick();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisCurrentRefinements } from './current-refinements';\n\n@NgModule({\n  declarations: [NgAisCurrentRefinements],\n  entryComponents: [NgAisCurrentRefinements],\n  exports: [NgAisCurrentRefinements],\n  imports: [CommonModule],\n})\nexport class NgAisCurrentRefinementsModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\n\nimport { connectHierarchicalMenu } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { parseNumberInput, noop } from '../utils';\n\nexport type HierarchicalMenuState = {\n  createURL: Function;\n  items: {}[];\n  refine: Function;\n};\n\n@Component({\n  selector: 'ais-hierarchical-menu',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <ul [class]=\"cx('list') + ' ' + cx('list', 'lvl0')\">\n        <ais-hierarchical-menu-item\n          *ngFor=\"let item of items\"\n          [item]=\"item\"\n          [createURL]=\"state.createURL\"\n          [refine]=\"state.refine\"\n        >\n        </ais-hierarchical-menu-item>\n      </ul>\n    </div>\n  `,\n})\nexport class NgAisHierarchicalMenu extends BaseWidget {\n  // render option\n  @Input() public transformItems?: Function;\n\n  // connector options\n  @Input() public attributes: string[];\n  @Input() public separator?: string = ' > ';\n  @Input() public rootPath?: string;\n  @Input() public showParentLevel?: boolean;\n  @Input() public limit?: number | string = 10;\n  @Input() public sortBy?: string[] | ((item: object) => number);\n\n  public state: HierarchicalMenuState = {\n    createURL: noop,\n    items: [],\n    refine: noop,\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  get items() {\n    return typeof this.transformItems === 'function'\n      ? this.transformItems(this.state.items)\n      : this.state.items;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('HierarchicalMenu');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectHierarchicalMenu, {\n      limit: parseNumberInput(this.limit),\n      attributes: this.attributes,\n      rootPath: this.rootPath,\n      separator: this.separator,\n      showParentLevel: this.showParentLevel,\n      sortBy: this.sortBy,\n    });\n\n    super.ngOnInit();\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { bem } from '../utils';\n\nexport type HierarchicalMenuItem = {\n  value: string;\n  label: string;\n  count: number;\n  isRefined: boolean;\n  data: HierarchicalMenuItem[];\n};\n\n@Component({\n  selector: 'ais-hierarchical-menu-item',\n  template: `\n    <li\n      [class]=\"getItemClass(item)\"\n      (click)=\"handleClick($event, item)\"\n    >\n      <a\n        [class]=\"cx('link')\"\n        href=\"{{createURL(item.value)}}\"\n        (click)=\"handleClick($event, item)\"\n      >\n        <span [class]=\"cx('label')\">{{item.label}}</span>\n        <span [class]=\"cx('count')\">{{item.count}}</span>\n      </a>\n\n      <ul\n        [class]=\"getListClass(item)\"\n        *ngIf=\"item.isRefined && isArray(item.data) && item.data.length > 0\"\n      >\n        <ais-hierarchical-menu-item\n          *ngFor=\"let child of item.data\"\n          [item]=\"child\"\n          [createURL]=\"createURL\"\n          [refine]=\"refine\"\n          [lvl]=\"lvl + 1\"\n        >\n        </ais-hierarchical-menu-item>\n      </ul>\n    </li>\n  `,\n})\nexport class NgAisHierarchicalMenuItem {\n  @Input() public lvl: number = 1;\n  @Input() public refine: (string) => void;\n  @Input() public createURL: (string) => string;\n  @Input() public item: HierarchicalMenuItem;\n\n  public cx = bem('HierarchicalMenu');\n\n  public getItemClass(item) {\n    let className = this.cx('item');\n\n    if (item.isRefined) {\n      className = `${className} ${this.cx('item', 'selected')}`;\n    }\n\n    if (this.isArray(item.data) && item.data.length > 0) {\n      className = `${className} ${this.cx('item', 'parent')}`;\n    }\n\n    return className;\n  }\n\n  public getListClass(item) {\n    return `${this.cx('list')} ${this.cx('list', 'child')} ${this.cx(\n      'list',\n      `lvl${this.lvl}`\n    )}`;\n  }\n\n  public isArray(potentialArray: any) {\n    return Array.isArray(potentialArray);\n  }\n\n  public handleClick(event: MouseEvent, item: HierarchicalMenuItem) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.refine(item.value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisHierarchicalMenu } from './hierarchical-menu';\nimport { NgAisHierarchicalMenuItem } from './hierarchical-menu-item';\n\n@NgModule({\n  declarations: [NgAisHierarchicalMenu, NgAisHierarchicalMenuItem],\n  entryComponents: [NgAisHierarchicalMenu],\n  exports: [NgAisHierarchicalMenu],\n  imports: [CommonModule],\n})\nexport class NgAisHierarchicalMenuModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\n\nimport { connectHitsPerPage } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\nexport type ResultsPerPageState = {\n  items: {}[];\n  refine: Function;\n};\n\n@Component({\n  selector: 'ais-hits-per-page',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <select\n        [class]=\"cx('select')\"\n        (change)=\"state.refine($event.target.value)\"\n      >\n        <option\n          [class]=\"cx('option')\"\n          *ngFor=\"let item of state.items\"\n          [value]=\"item.value\"\n          [selected]=\"item.isRefined\"\n        >\n          {{item.label}}\n        </option>\n      </select>\n    </div>\n  `,\n})\nexport class NgAisHitsPerPage extends BaseWidget {\n  @Input()\n  public items: {\n    value: number;\n    label: string;\n    default?: boolean;\n  }[];\n\n  public state: ResultsPerPageState = {\n    items: [],\n    refine: noop,\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('HitsPerPage');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectHitsPerPage, { items: this.items });\n    super.ngOnInit();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisHitsPerPage } from './hits-per-page';\n\n@NgModule({\n  declarations: [NgAisHitsPerPage],\n  entryComponents: [NgAisHitsPerPage],\n  exports: [NgAisHitsPerPage],\n  imports: [CommonModule],\n})\nexport class NgAisHitsPerPageModule {}\n","const get = require('lodash/get');\nimport { Component, Input } from '@angular/core';\nimport { bem } from '../utils';\n\n@Component({\n  selector: 'ais-highlight',\n  template: `<span [class]=\"cx()\" [innerHtml]=\"content\"></span>`,\n})\nexport class NgAisHighlight {\n  @Input() attribute: string;\n  @Input() hit: { _highlightResult?: {}; label?: string; highlighted?: string };\n  @Input() tagName: string = 'em';\n\n  cx = bem('Highlight');\n\n  get content() {\n    if (this.attribute === 'highlighted') {\n      return this.hit.highlighted\n        ? this.replaceWithTagName(this.hit.highlighted)\n        : this.hit.label;\n    }\n\n    if (this.hit.hasOwnProperty('_highlightResult')) {\n      const attributeHighlighted = get(\n        this.hit._highlightResult,\n        this.attribute\n      );\n\n      // check that the attributeHighlighted is a string\n      if (\n        attributeHighlighted !== undefined &&\n        typeof attributeHighlighted.value === 'string'\n      ) {\n        return this.replaceWithTagName(attributeHighlighted.value);\n      }\n    }\n\n    const fallback = get(this.hit, this.attribute);\n    if (!fallback) {\n      console.warn(\n        `Could not find attribute [${\n          this.attribute\n        }] into hit object, will display an empty string.`\n      );\n\n      return '';\n    }\n\n    return fallback;\n  }\n\n  replaceWithTagName(value: string) {\n    return value\n      .replace(\n        new RegExp('<em>', 'g'),\n        `<${this.tagName} class=\"${this.cx('highlighted')}\">`\n      )\n      .replace(new RegExp('</em>', 'g'), `</${this.tagName}>`);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisHighlight } from './highlight';\n\n@NgModule({\n  declarations: [NgAisHighlight],\n  entryComponents: [NgAisHighlight],\n  exports: [NgAisHighlight],\n  imports: [CommonModule],\n})\nexport class NgAisHighlightModule {}\n","import {\n  Inject,\n  Input,\n  Component,\n  ContentChild,\n  TemplateRef,\n  forwardRef,\n} from '@angular/core';\n\nimport { connectHits } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\n\n@Component({\n  selector: 'ais-hits',\n  template: `\n    <div [class]=\"cx()\">\n      <ng-container *ngTemplateOutlet=\"template; context: state\"></ng-container>\n\n      <!-- default rendering if no template specified -->\n      <div *ngIf=\"!template\">\n        <ul [class]=\"cx('list')\">\n          <li\n            [class]=\"cx('item')\"\n            *ngFor=\"let hit of state.hits\"\n          >\n            <ais-highlight attribute=\"name\" [hit]=\"hit\">\n            </ais-highlight>\n          </li>\n        </ul>\n      </div>\n    </div>\n  `,\n})\nexport class NgAisHits extends BaseWidget {\n  @ContentChild(TemplateRef) public template?: TemplateRef<any>;\n\n  // render options\n  @Input() transformItems?: Function;\n\n  // inner widget state returned from connector\n  public state: { hits: {}[]; results: {} } = { hits: [], results: {} };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('Hits');\n    this.createWidget(connectHits, { escapeHits: true });\n  }\n\n  updateState = (state, isFirstRendering: boolean) => {\n    if (isFirstRendering) return;\n\n    this.state = {\n      ...state,\n      results: state.results,\n      hits:\n        typeof this.transformItems === 'function'\n          ? this.transformItems(state.hits)\n          : state.hits,\n    };\n  };\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisHighlightModule } from '../highlight/highlight.module';\nimport { NgAisHits } from './hits';\n\n@NgModule({\n  declarations: [NgAisHits],\n  entryComponents: [NgAisHits],\n  exports: [NgAisHits],\n  imports: [CommonModule, NgAisHighlightModule],\n})\nexport class NgAisHitsModule {}\n","import {\n  Component,\n  ContentChild,\n  Input,\n  TemplateRef,\n  Inject,\n  forwardRef,\n} from '@angular/core';\n\nimport { connectInfiniteHits } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\n@Component({\n  selector: 'ais-infinite-hits',\n  template: `\n    <div [class]=\"cx()\">\n      <ng-container *ngTemplateOutlet=\"template; context: state\"></ng-container>\n\n      <!-- default rendering if no template specified -->\n      <div *ngIf=\"!template\">\n        <ul [class]=\"cx('list')\">\n          <li\n            [class]=\"cx('item')\"\n            *ngFor=\"let hit of state.hits\"\n          >\n            <ais-highlight attribute=\"name\" [hit]=\"hit\">\n            </ais-highlight>\n          </li>\n        </ul>\n      </div>\n\n      <button\n        [class]=\"cx('showMore')\"\n        (click)=\"showMore($event)\"\n        [disabled]=\"state.isLastPage\"\n        *ngIf=\"!template\"\n      >\n        {{showMoreLabel}}\n      </button>\n    </div>\n  `,\n})\nexport class NgAisInfiniteHits extends BaseWidget {\n  @ContentChild(TemplateRef) public template?: any;\n\n  // render options\n  @Input() public showMoreLabel: string = 'Show more results';\n  @Input() public transformItems?: Function;\n\n  // inner widget state returned from connector\n  public state: {\n    hits: {}[];\n    isLastPage: boolean;\n    showMore: Function;\n    results: {};\n  } = {\n    hits: [],\n    isLastPage: false,\n    showMore: noop,\n    results: {},\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('InfiniteHits');\n    this.createWidget(connectInfiniteHits, { escapeHits: true });\n  }\n\n  public showMore(event: MouseEvent) {\n    event.preventDefault();\n    this.state.showMore();\n  }\n\n  updateState = (state, isFirstRendering: boolean) => {\n    if (isFirstRendering) return;\n\n    this.state = {\n      ...state,\n      results: state.results,\n      hits:\n        typeof this.transformItems === 'function'\n          ? this.transformItems(state.hits)\n          : state.hits,\n    };\n  };\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisHighlightModule } from '../highlight/highlight.module';\nimport { NgAisInfiniteHits } from './infinite-hits';\n\n@NgModule({\n  declarations: [NgAisInfiniteHits],\n  entryComponents: [NgAisInfiniteHits],\n  exports: [NgAisInfiniteHits],\n  imports: [CommonModule, NgAisHighlightModule],\n})\nexport class NgAisInfiniteHitsModule {}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { NgAisInstantSearch } from './instantsearch';\n\n@NgModule({\n  declarations: [NgAisInstantSearch],\n  entryComponents: [NgAisInstantSearch],\n  exports: [NgAisInstantSearch],\n  imports: [CommonModule],\n})\nexport class NgAisInstantSearchModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgAisInstantSearchModule,\n      providers: [],\n    };\n  }\n}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\n\nimport { connectMenu } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { parseNumberInput, noop } from '../utils';\n\nexport type MenuState = {\n  canRefine: boolean;\n  canToggleShowMore: boolean;\n  createURL: Function;\n  isShowingMore: boolean;\n  items: {}[];\n  refine: Function;\n  toggleShowMore: Function;\n};\n\n@Component({\n  selector: 'ais-menu',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <ul [class]=\"cx('list')\">\n        <li\n          [class]=\"getItemClass(item)\"\n          *ngFor=\"let item of items\"\n          (click)=\"handleClick($event, item.value)\"\n        >\n          <a\n            href=\"{{state.createURL(item.value)}}\"\n            [class]=\"cx('link')\"\n            (click)=\"handleClick($event, item.value)\"\n          >\n            <span [class]=\"cx('label')\">{{item.label}}</span>\n            <span [class]=\"cx('count')\">{{item.count}}</span>\n          </a>\n        </li>\n      </ul>\n\n      <button\n        *ngIf=\"showMoreLimit && state.canToggleShowMore\"\n        (click)=\"state.toggleShowMore()\"\n        [class]=\"showMoreClass\"\n      >\n        {{state.isShowingMore ? showLessLabel : showMoreLabel}}\n      </button>\n    </div>\n  `,\n})\nexport class NgAisMenu extends BaseWidget {\n  // render options\n  @Input() public showMoreLabel: string = 'Show more';\n  @Input() public showLessLabel: string = 'Show less';\n  @Input() public transformItems?: Function;\n\n  // connector options\n  @Input() public attribute: string;\n  @Input() public limit?: number | string = 10;\n  @Input() public showMoreLimit?: number | string;\n  @Input() public sortBy?: string[] | ((item: object) => number);\n\n  public state: MenuState = {\n    canRefine: false,\n    canToggleShowMore: false,\n    createURL: noop,\n    isShowingMore: false,\n    items: [],\n    refine: noop,\n    toggleShowMore: noop,\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  get showMoreClass() {\n    let className = this.cx('showMore');\n\n    if (!this.state.canToggleShowMore) {\n      className = `${className} ${this.cx('showMore', 'disabled')}`;\n    }\n\n    return className;\n  }\n\n  get items() {\n    return typeof this.transformItems === 'function'\n      ? this.transformItems(this.state.items)\n      : this.state.items;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('Menu');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectMenu, {\n      limit: parseNumberInput(this.limit),\n      showMoreLimit: parseNumberInput(this.showMoreLimit),\n      attributeName: this.attribute,\n      sortBy: this.sortBy,\n    });\n\n    super.ngOnInit();\n  }\n\n  handleClick(event: MouseEvent, value: string) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.state.refine(value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisMenu } from './menu';\n\n@NgModule({\n  declarations: [NgAisMenu],\n  entryComponents: [NgAisMenu],\n  exports: [NgAisMenu],\n  imports: [CommonModule],\n})\nexport class NgAisMenuModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\n\nimport { connectNumericRefinementList } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\nexport type NumericRefinementListState = {\n  createURL: Function;\n  items: {}[];\n  refine: Function;\n};\n\n@Component({\n  selector: 'ais-numeric-menu',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <ul [class]=\"cx('list')\">\n        <li\n          [class]=\"getItemClass(item)\"\n          *ngFor=\"let item of state.items\"\n          (click)=\"refine($event, item)\"\n        >\n          <label [class]=\"cx('label')\">\n            <input\n              [class]=\"cx('radio')\"\n              type=\"radio\"\n              name=\"NumericMenu\"\n              [checked]=\"item.isRefined\"\n            />\n            <span [class]=\"cx('labelText')\">{{item.label}}</span>\n          </label>\n        </li>\n      </ul>\n    </div>\n  `,\n})\nexport class NgAisNumericMenu extends BaseWidget {\n  @Input() public attribute: string;\n  @Input()\n  public items: {\n    name: string;\n    start?: number;\n    end?: number;\n  }[];\n\n  public state: NumericRefinementListState = {\n    createURL: noop,\n    items: [],\n    refine: noop,\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('NumericMenu');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectNumericRefinementList, {\n      attributeName: this.attribute,\n      options: this.items,\n    });\n    super.ngOnInit();\n  }\n\n  public refine(event: MouseEvent, item: { value: string }) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.state.refine(item.value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisNumericMenu } from './numeric-menu';\n\n@NgModule({\n  declarations: [NgAisNumericMenu],\n  entryComponents: [NgAisNumericMenu],\n  exports: [NgAisNumericMenu],\n  imports: [CommonModule],\n})\nexport class NgAisNumericMenuModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\n\nimport { connectNumericSelector } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\nexport type NumericSelectorState = {\n  currentRefinement?: string | null;\n  options: {}[];\n  refine: Function;\n};\n\n@Component({\n  selector: 'ais-numeric-selector',\n  template: `\n    <div [class]=\"cx('')\">\n      <select\n        [class]=\"cx('select')\"\n        (change)=\"state.refine($event.target.value)\"\n      >\n        <option\n          [class]=\"cx('option')\"\n          *ngFor=\"let item of state.options\"\n          [value]=\"item.value\"\n          [selected]=\"item.value === state.currentRefinement\"\n        >\n          {{item.label}}\n        </option>\n      </select>\n    </div>\n  `,\n})\nexport class NgAisNumericSelector extends BaseWidget {\n  // connector options\n  @Input() public attribute: string;\n  @Input() public operator: '<' | '<=' | '=' | '>=' | '>' | '!=' = '=';\n  @Input()\n  public items: {\n    value: number;\n    label: string;\n  }[];\n\n  public state: NumericSelectorState = {\n    currentRefinement: null,\n    options: [],\n    refine: noop,\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('NumericSelector');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectNumericSelector, {\n      attributeName: this.attribute,\n      operator: this.operator,\n      options: this.items,\n    });\n    super.ngOnInit();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisNumericSelector } from './numeric-selector';\n\n@NgModule({\n  declarations: [NgAisNumericSelector],\n  entryComponents: [NgAisNumericSelector],\n  exports: [NgAisNumericSelector],\n  imports: [CommonModule],\n})\nexport class NgAisNumericSelectorModule {}\n","const range = require('lodash/range');\nimport { Component, Input, Inject, forwardRef } from '@angular/core';\nimport { connectPagination } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { parseNumberInput, noop } from '../utils';\n\n@Component({\n  selector: 'ais-pagination',\n  template: `\n    <div [class]=\"cx()\">\n      <ul [class]=\"cx('list')\">\n        <li\n          *ngIf=\"showFirst\"\n          (click)=\"refine($event, 0)\"\n          [class]=\"\n            cx('item') +\n            ' ' +\n            cx('item', 'firstPage') +\n            (state.currentRefinement === 0 ? ' ' + cx('item', 'disabled') : '')\n          \"\n        >\n          <a\n            [href]=\"state.createURL(0)\"\n            [class]=\"cx('link')\"\n          >\n            â¹â¹\n          </a>\n        </li>\n\n        <li\n          *ngIf=\"showPrevious\"\n          (click)=\"refine($event, state.currentRefinement - 1)\"\n          [class]=\"\n            cx('item') +\n            ' ' +\n            cx('item', 'previousPage') +\n            (state.currentRefinement === 0 ? ' ' + cx('item', 'disabled') : '')\n          \"\n        >\n          <a\n            [href]=\"state.createURL(state.currentRefinement - 1)\"\n            [class]=\"cx('link')\"\n          >\n            â¹\n          </a>\n        </li>\n\n        <li\n          [class]=\"\n            cx('item') +\n            ' ' +\n            cx('item', 'page') +\n            (state.currentRefinement === page ? ' ' + cx('item', 'selected') : '')\n          \"\n          *ngFor=\"let page of pages\"\n          (click)=\"refine($event, page)\"\n        >\n          <a\n            [class]=\"cx('link')\"\n            [href]=\"state.createURL(page)\"\n          >\n            {{page + 1}}\n          </a>\n        </li>\n\n        <li\n          *ngIf=\"showNext\"\n          (click)=\"refine($event, state.currentRefinement + 1)\"\n          [class]=\"\n            cx('item') +\n            ' ' +\n            cx('item', 'nextPage') +\n            (state.currentRefinement + 1 === state.nbPages ? ' ' + cx('item', 'disabled') : '')\n          \"\n        >\n          <a\n            [href]=\"state.createURL(state.currentRefinement + 1)\"\n            [class]=\"cx('link')\"\n          >\n            âº\n          </a>\n        </li>\n\n        <li\n          *ngIf=\"showLast\"\n          (click)=\"refine($event, state.nbPages - 1)\"\n          [class]=\"\n            cx('item') +\n            ' ' +\n            cx('item', 'lastPage') +\n            (state.currentRefinement + 1 === state.nbPages ? ' ' + cx('item', 'disabled') : '')\n          \"\n        >\n          <a\n            [href]=\"state.createURL(state.nbPages - 1)\"\n            [class]=\"cx('link')\"\n          >\n            âºâº\n          </a>\n        </li>\n      </ul>\n    </div>\n  `,\n})\nexport class NgAisPagination extends BaseWidget {\n  // render options\n  @Input() public showFirst: boolean = true;\n  @Input() public showLast: boolean = false;\n  @Input() public showPrevious: boolean = true;\n  @Input() public showNext: boolean = true;\n  @Input() public padding: number | string = 3;\n\n  // connector optionsw\n  @Input() public totalPages?: number | string;\n\n  public state = {\n    createURL: noop,\n    currentRefinement: 0,\n    nbHits: 0,\n    nbPages: 0,\n    refine: noop,\n  };\n\n  get pages() {\n    const { nbPages, currentRefinement } = this.state;\n\n    const pagesArray = Array.apply(null, { length: nbPages }).map(\n      Number.call,\n      Number\n    );\n\n    const pagesPadding =\n      typeof this.padding === 'string'\n        ? parseInt(this.padding, 10)\n        : this.padding;\n\n    if (pagesPadding && pagesPadding > 0) {\n      // should not display pages that does not exists\n      if (nbPages < pagesPadding * 2 + 1) {\n        return pagesArray;\n      }\n\n      const minDelta = currentRefinement - pagesPadding - 1;\n      const maxDelta = currentRefinement + pagesPadding + 1;\n\n      if (minDelta < 0) {\n        return range(0, currentRefinement + pagesPadding + Math.abs(minDelta));\n      }\n\n      if (maxDelta > nbPages) {\n        return range(\n          currentRefinement - pagesPadding - (maxDelta - nbPages),\n          nbPages\n        );\n      }\n\n      return range(\n        currentRefinement - pagesPadding,\n        currentRefinement + pagesPadding + 1\n      );\n    }\n\n    return pagesArray;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('Pagination');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectPagination, {\n      maxPages: parseNumberInput(this.totalPages),\n    });\n    super.ngOnInit();\n  }\n\n  public refine(event: MouseEvent, page: number) {\n    event.stopPropagation();\n    event.preventDefault();\n\n    if (\n      page < 0 ||\n      page === this.state.currentRefinement ||\n      page >= this.state.nbPages\n    ) {\n      return;\n    }\n\n    this.state.refine(page);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisPagination } from './pagination';\n\n@NgModule({\n  declarations: [NgAisPagination],\n  entryComponents: [NgAisPagination],\n  exports: [NgAisPagination],\n  imports: [CommonModule],\n})\nexport class NgAisPaginationModule {}\n","import { Component, Input, ViewChild, Inject, forwardRef } from '@angular/core';\n\nimport { connectRange } from 'instantsearch.js/es/connectors';\nimport * as noUiSlider from 'nouislider';\n\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { parseNumberInput, noop } from '../utils';\n\nexport type RangeSliderState = {\n  range: { min: number; max: number };\n  refine: Function;\n  start: number[];\n};\n\n@Component({\n  selector: 'ais-range-slider',\n  template: `\n    <div [class]=\"cx()\">\n      <div [class]=\"cx('body')\">\n        <div #sliderContainer></div>\n      </div>\n    </div>\n  `,\n})\nexport class NgAisRangeSlider extends BaseWidget {\n  @ViewChild('sliderContainer') public sliderContainer: any;\n\n  // render options\n  @Input() public pips: boolean = true;\n  @Input() public tooltips: boolean = true;\n\n  // connector options\n  @Input() public attribute: string;\n  @Input() public min?: number | string;\n  @Input() public max?: number | string;\n  @Input() public precision: number | string = 2;\n\n  public state: RangeSliderState = {\n    range: { min: 0, max: 1 },\n    refine: noop,\n    start: [0, 1],\n  };\n\n  private slider: any;\n\n  get step() {\n    // compute step from the precision value\n    const precision = parseNumberInput(this.precision) || 2;\n    return 1 / Math.pow(10, precision);\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('RangeSlider');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectRange, {\n      attributeName: this.attribute,\n      max: parseNumberInput(this.max),\n      min: parseNumberInput(this.min),\n      precision: parseNumberInput(this.precision),\n    });\n\n    super.ngOnInit();\n  }\n\n  public updateState = (state, isFirstRendering: boolean) => {\n    if (isFirstRendering) {\n      // create slider\n      const config = {\n        animate: false,\n        behaviour: 'snap',\n        connect: true,\n        range: { min: 0, max: 1 },\n        start: [0, 1],\n        step: this.step,\n        tooltips: this.tooltips && [\n          { to: this.formatTooltip },\n          { to: this.formatTooltip },\n        ],\n      };\n\n      if (this.pips === true || typeof this.pips === 'undefined') {\n        Object.assign(config, {\n          pips: {\n            density: 3,\n            mode: 'positions',\n            stepped: true,\n            values: [0, 50, 100],\n          },\n        });\n      } else if (this.pips !== undefined) {\n        Object.assign(config, { pips: this.pips });\n      }\n\n      this.slider = noUiSlider.create(\n        this.sliderContainer.nativeElement,\n        config\n      );\n\n      // register listen events\n      this.sliderContainer.nativeElement.noUiSlider.on(\n        'change',\n        this.handleChange\n      );\n    }\n\n    // update component inner state\n    this.state = state;\n\n    // update the slider state\n    const {\n      range: { min, max },\n      start,\n    } = state;\n\n    const disabled = min === max;\n    const range = disabled ? { min, max: max + 0.0001 } : { min, max };\n\n    this.slider.updateOptions({ disabled, range, start });\n  };\n\n  public handleChange = (values: string[] | number[]) => {\n    this.state.refine(values);\n  };\n\n  public formatTooltip = (value: number) => {\n    return value.toFixed(parseNumberInput(this.precision));\n  };\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisRangeSlider } from './range-slider';\n\n@NgModule({\n  declarations: [NgAisRangeSlider],\n  entryComponents: [NgAisRangeSlider],\n  exports: [NgAisRangeSlider],\n  imports: [CommonModule],\n})\nexport class NgAisRangeSliderModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\nimport { connectRefinementList } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { parseNumberInput, noop } from '../utils';\n\nexport type RefinementListState = {\n  canRefine: boolean;\n  canToggleShowMore: boolean;\n  createURL: Function;\n  isShowingMore: boolean;\n  items: {}[];\n  refine: Function;\n  toggleShowMore: Function;\n  searchForItems: Function;\n  isFormSearch: boolean;\n};\n\n@Component({\n  selector: 'ais-refinement-list',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <div\n        *ngIf=\"searchable\"\n        [class]=\"cx('searchBox')\"\n      >\n        <ais-facets-search\n          [search]=\"state.searchForItems\"\n          [searchPlaceholder]=\"searchPlaceholder\"\n        >\n        </ais-facets-search>\n      </div>\n\n      <ul [class]=\"cx('list')\">\n        <li\n          [class]=\"getItemClass(item)\"\n          *ngFor=\"let item of items\"\n          (click)=\"refine($event, item)\"\n        >\n          <label [class]=\"cx('label')\">\n            <input\n              [class]=\"cx('checkbox')\"\n              type=\"checkbox\"\n              value=\"{{item.value}}\"\n              [checked]=\"item.isRefined\"\n            />\n            <span [class]=\"cx('labelText')\">\n              <ais-highlight attribute=\"highlighted\" [hit]=\"item\"></ais-highlight>\n            </span>\n            <span [class]=\"cx('count')\">{{item.count}}</span>\n          </label>\n        </li>\n      </ul>\n\n      <button\n        *ngIf=\"showMoreLimit && state.canToggleShowMore\"\n        (click)=\"state.toggleShowMore()\"\n      >\n        {{state.isShowingMore ? showLessLabel : showMoreLabel}}\n      </button>\n    </div>\n  `,\n})\nexport class NgAisRefinementList extends BaseWidget {\n  // render options\n  @Input() public showMoreLabel: string = 'Show more';\n  @Input() public showLessLabel: string = 'Show less';\n  @Input() public transformItems?: Function;\n  @Input() public searchable?: boolean;\n  @Input() public searchPlaceholder: string = 'Search here...';\n\n  // connectors options\n  @Input() public attribute: string;\n  @Input() public operator: 'or' | 'and' = 'or';\n  @Input() public limit: number | string = 10;\n  @Input() public showMoreLimit: number | string;\n  @Input() public sortBy: string[] | ((item: object) => number);\n\n  public state: RefinementListState = {\n    canRefine: false,\n    canToggleShowMore: false,\n    createURL: noop,\n    isShowingMore: false,\n    items: [],\n    refine: noop,\n    toggleShowMore: noop,\n    searchForItems: noop,\n    isFormSearch: false,\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('RefinementList');\n  }\n\n  get items() {\n    return typeof this.transformItems === 'function'\n      ? this.transformItems(this.state.items)\n      : this.state.items;\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectRefinementList, {\n      limit: parseNumberInput(this.limit),\n      showMoreLimit: parseNumberInput(this.showMoreLimit),\n      attributeName: this.attribute,\n      sortBy: this.sortBy,\n      escapeFacetValues: true,\n    });\n\n    super.ngOnInit();\n  }\n\n  public refine(\n    event: MouseEvent,\n    item: { isRefined: boolean; value: string }\n  ) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (this.state.canRefine) {\n      // update UI directly, it will update the checkbox state\n      item.isRefined = !item.isRefined;\n\n      // refine through Algolia API\n      this.state.refine(item.value);\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { bem } from '../utils';\n\n@Component({\n  selector: 'ais-facets-search',\n  template: `\n    <div [class]=\"cx()\">\n      <form\n        [class]=\"cx('form')\"\n        (submit)=\"handleSubmit($event)\"\n        novalidate\n      >\n        <input\n          [class]=\"cx('input')\"\n          autocapitalize=\"off\"\n          autocorrect=\"off\"\n          placeholder=\"{{searchPlaceholder}}\"\n          role=\"textbox\"\n          spellcheck=\"false\"\n          type=\"text\"\n          [value]=\"searchQuery\"\n          (input)=\"handleChange($event.target.value)\"\n        />\n\n        <button\n          [class]=\"cx('submit')\"\n          title=\"Submit the search query.\"\n          type=\"submit\"\n        >\n          <svg\n            [ngClass]=\"cx('submitIcon')\"\n            viewBox=\"0 0 40 40\"\n            width=\"10\"\n            height=\"10\"\n          >\n            <path d=\"M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3.12 16.378c0 7.323 5.936 13.26 13.258 13.26z\"></path>\n          </svg>\n        </button>\n\n        <button\n          [class]=\"cx('reset')\"\n          type=\"reset\"\n          title=\"Clear the search query.\"\n          hidden\n        >\n          <svg\n            [ngClass]=\"cx('resetIcon')\"\n            viewBox=\"0 0 20 20\"\n            width=\"10\"\n            height=\"10\"\n          >\n            <path d=\"M8.114 10L.944 2.83 0 1.885 1.886 0l.943.943L10 8.113l7.17-7.17.944-.943L20 1.886l-.943.943-7.17 7.17 7.17 7.17.943.944L18.114 20l-.943-.943-7.17-7.17-7.17 7.17-.944.943L0 18.114l.943-.943L8.113 10z\"></path>\n          </svg>\n        </button>\n      </form>\n    </div>\n  `,\n})\nexport class NgAisFacetsSearch {\n  @Input() public searchPlaceholder: string;\n  @Input() public search: Function;\n\n  public cx = bem('SearchBox');\n\n  public searchQuery = '';\n\n  public handleChange(value: string) {\n    this.searchQuery = value;\n    this.search(value);\n  }\n\n  public handleSubmit(event) {\n    event.preventDefault();\n    this.search(this.searchQuery);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisHighlightModule } from '../highlight/highlight.module';\nimport { NgAisRefinementList } from './refinement-list';\nimport { NgAisFacetsSearch } from './facets-search';\n\n@NgModule({\n  declarations: [NgAisRefinementList, NgAisFacetsSearch],\n  entryComponents: [NgAisRefinementList],\n  exports: [NgAisRefinementList],\n  imports: [CommonModule, NgAisHighlightModule],\n})\nexport class NgAisRefinementListModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  Inject,\n  forwardRef,\n  ViewChild,\n  AfterViewInit,\n  ElementRef,\n} from '@angular/core';\n\nimport { connectSearchBox } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\n@Component({\n  selector: 'ais-search-box',\n  template: `\n    <div [class]=\"cx()\">\n      <form\n        [class]=\"cx('form')\"\n        novalidate\n        (submit)=\"handleSubmit($event)\"\n      >\n        <input\n          [class]=\"cx('input')\"\n          autocapitalize=\"off\"\n          autocorrect=\"off\"\n          placeholder=\"{{placeholder}}\"\n          role=\"textbox\"\n          spellcheck=\"false\"\n          type=\"text\"\n          [value]=\"state.query\"\n          (input)=\"handleChange($event.target.value)\"\n          (focus)=\"focus.emit($event)\"\n          (blur)=\"blur.emit($event)\"\n          #searchBox\n        />\n\n        <button\n          [class]=\"cx('submit')\"\n          type=\"submit\"\n          title=\"{{submitTitle}}\"\n          (click)=\"handleSubmit($event)\"\n        >\n          <svg\n            [ngClass]=\"cx('submitIcon')\"\n            viewBox=\"0 0 40 40\"\n            width=\"40\"\n            height=\"40\"\n          >\n            <path d=\"M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3.12 16.378c0 7.323 5.936 13.26 13.258 13.26z\"></path>\n          </svg>\n        </button>\n\n        <button\n          [class]=\"cx('reset')\"\n          type=\"reset\"\n          title=\"{{resetTitle}}\"\n          (click)=\"handleReset($event)\"\n          [hidden]=\"!state.query || (state.query && !state.query.trim())\">\n          <svg\n            [ngClass]=\"cx('resetIcon')\"\n            viewBox=\"0 0 20 20\"\n            width=\"20\"\n            height=\"20\"\n          >\n            <path d=\"M8.114 10L.944 2.83 0 1.885 1.886 0l.943.943L10 8.113l7.17-7.17.944-.943L20 1.886l-.943.943-7.17 7.17 7.17 7.17.943.944L18.114 20l-.943-.943-7.17-7.17-7.17 7.17-.944.943L0 18.114l.943-.943L8.113 10z\"></path>\n          </svg>\n        </button>\n      </form>\n    </div>\n  `,\n})\nexport class NgAisSearchBox extends BaseWidget implements AfterViewInit {\n  @ViewChild('searchBox') searchBox: ElementRef;\n  @Input() public placeholder: string = 'Search';\n  @Input() public submitTitle: string = 'Submit';\n  @Input() public resetTitle: string = 'Reset';\n  @Input() public searchAsYouType: boolean = true;\n  @Input() public autofocus: boolean = false;\n\n  // Output events\n  // form\n  @Output() submit = new EventEmitter();\n  @Output() reset = new EventEmitter();\n\n  // input\n  @Output() change = new EventEmitter();\n  @Output() focus = new EventEmitter();\n  @Output() blur = new EventEmitter();\n\n  public state = {\n    query: '',\n    refine: noop,\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('SearchBox');\n    this.createWidget(connectSearchBox);\n  }\n\n  public ngAfterViewInit() {\n    if (this.autofocus) {\n      this.searchBox.nativeElement.focus();\n    }\n  }\n\n  public handleChange(query: string) {\n    this.change.emit(query);\n\n    if (this.searchAsYouType) {\n      this.state.refine(query);\n    }\n  }\n\n  public handleSubmit(event: MouseEvent) {\n    // send submit event to parent component\n    this.submit.emit(event);\n\n    event.preventDefault();\n\n    if (!this.searchAsYouType) {\n      this.state.refine(this.state.query);\n    }\n  }\n\n  public handleReset(event: MouseEvent) {\n    // send reset event to parent component\n    this.reset.emit(event);\n\n    // reset search\n    this.state.refine('');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisSearchBox } from './search-box';\n\n@NgModule({\n  declarations: [NgAisSearchBox],\n  entryComponents: [NgAisSearchBox],\n  exports: [NgAisSearchBox],\n  imports: [CommonModule],\n})\nexport class NgAisSearchBoxModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\n\nimport { connectSortBySelector } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\n@Component({\n  selector: 'ais-sort-by',\n  template: `\n    <div [class]=\"cx()\">\n      <select\n        [class]=\"cx('select')\"\n        (change)=\"state.refine($event.target.value)\"\n      >\n        <option\n          [class]=\"cx('option')\"\n          *ngFor=\"let item of state.options\"\n          [value]=\"item.value\"\n          [selected]=\"item.value === state.currentRefinement\"\n        >\n          {{item.label}}\n        </option>\n      </select>\n    </div>\n  `,\n})\nexport class NgAisSortBy extends BaseWidget {\n  @Input()\n  public items: {\n    name: string;\n    label: string;\n  }[];\n\n  public state: {\n    currentRefinement: string | null;\n    options: {}[];\n    refine: Function;\n  } = {\n    currentRefinement: null,\n    options: [],\n    refine: noop,\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('SortBy');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectSortBySelector, { indices: this.items });\n    super.ngOnInit();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisSortBy } from './sort-by';\n\n@NgModule({\n  declarations: [NgAisSortBy],\n  entryComponents: [NgAisSortBy],\n  exports: [NgAisSortBy],\n  imports: [CommonModule],\n})\nexport class NgAisSortByModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\n\nimport { connectStarRating } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\nexport type RatingMenuState = {\n  createURL: Function;\n  hasNoResults: boolean;\n  items: {}[];\n  refine: Function;\n};\n\n@Component({\n  selector: 'ais-rating-menu',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <svg style=\"display:none;\">\n        <symbol\n          id=\"ais-StarRating-starSymbol\"\n          viewBox=\"0 0 24 24\"\n          width=\"24\"\n          height=\"24\"\n        >\n          <path d=\"M12 .288l2.833 8.718h9.167l-7.417 5.389 2.833 8.718-7.416-5.388-7.417 5.388 2.833-8.718-7.416-5.389h9.167z\"/>\n        </symbol>\n        <symbol\n          id=\"ais-StarRating-starEmptySymbol\"\n          viewBox=\"0 0 24 24\"\n          width=\"24\"\n          height=\"24\"\n        >\n          <path d=\"M12 6.76l1.379 4.246h4.465l-3.612 2.625 1.379 4.246-3.611-2.625-3.612 2.625 1.379-4.246-3.612-2.625h4.465l1.38-4.246zm0-6.472l-2.833 8.718h-9.167l7.416 5.389-2.833 8.718 7.417-5.388 7.416 5.388-2.833-8.718 7.417-5.389h-9.167l-2.833-8.718z\"/>\n        </symbol>\n      </svg>\n\n      <ul [class]=\"cx('list')\">\n        <li\n          *ngFor=\"let item of state.items\"\n          [class]=\"getItemClass(item)\"\n          (click)=\"handleClick($event, item.value)\"\n        >\n          <a\n            href=\"{{state.createURL(item.value)}}\"\n            [class]=\"cx('link')\"\n            (click)=\"handleClick($event, item.value)\"\n          >\n            <svg\n              *ngFor=\"let star of item.stars\"\n              [ngClass]=\"cx('starIcon')\"\n              aria-hidden=\"true\"\n            >\n              <use\n                *ngIf=\"star\"\n                xlink:href=\"#ais-StarRating-starSymbol\"\n              >\n              </use>\n\n              <use\n                *ngIf=\"!star\"\n                xlink:href=\"#ais-StarRating-starEmptySymbol\"\n              >\n              </use>\n            </svg>\n\n            <span [class]=\"cx('label')\" aria-hidden=\"true\">{{andUpLabel}}</span>\n            <span [class]=\"cx('count')\">{{item.count}}</span>\n          </a>\n        </li>\n      </ul>\n    </div>\n  `,\n})\nexport class NgAisRatingMenu extends BaseWidget {\n  // render options\n  @Input() public andUpLabel: string = '& Up';\n\n  // connectors options\n  @Input() public attribute: string;\n  @Input() public max?: number = 5;\n\n  public state: RatingMenuState = {\n    createURL: noop,\n    hasNoResults: false,\n    items: [],\n    refine: noop,\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('RatingMenu');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectStarRating, {\n      attributeName: this.attribute,\n      max: this.max,\n    });\n    super.ngOnInit();\n  }\n\n  public handleClick(event: MouseEvent, value: string) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.state.refine(value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisRatingMenu } from './rating-menu';\n\n@NgModule({\n  declarations: [NgAisRatingMenu],\n  entryComponents: [NgAisRatingMenu],\n  exports: [NgAisRatingMenu],\n  imports: [CommonModule],\n})\nexport class NgAisRatingMenuModule {}\n","import {\n  Component,\n  ContentChild,\n  TemplateRef,\n  Inject,\n  forwardRef,\n} from '@angular/core';\n\nimport { connectStats } from 'instantsearch.js/es/connectors';\n\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\n\n@Component({\n  selector: 'ais-stats',\n  template: `\n    <div [class]=\"cx()\">\n      <ng-container *ngTemplateOutlet=\"template; context: templateContext\">\n      </ng-container>\n\n      <span *ngIf=\"!template\" [class]=\"cx('text')\">\n        {{state.nbHits}} results found in {{state.processingTimeMS}}ms.\n      </span>\n    </div>\n  `,\n})\nexport class NgAisStats extends BaseWidget {\n  @ContentChild(TemplateRef) public template: any;\n\n  public state = {\n    hitPerPage: 0,\n    nbHits: 0,\n    nbPages: 0,\n    page: 0,\n    processingTimeMS: 0,\n    query: '',\n  };\n\n  get templateContext() {\n    return { state: this.state };\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('Stats');\n    this.createWidget(connectStats);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisStats } from './stats';\n\n@NgModule({\n  declarations: [NgAisStats],\n  entryComponents: [NgAisStats],\n  exports: [NgAisStats],\n  imports: [CommonModule],\n})\nexport class NgAisStatsModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\n\nimport { connectToggle } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\nexport type ToggleState = {\n  createURL: Function;\n  refine: Function;\n  value: {\n    name?: string;\n    count?: number;\n    isRefined?: boolean;\n  };\n};\n\n@Component({\n  selector: 'ais-toggle',\n  template: `\n    <div [class]=\"cx()\">\n      <ul [class]=\"cx('list')\">\n        <li\n          [class]=\"cx('item')\"\n          (click)=\"handleClick($event)\">\n          <label [class]=\"cx('label')\">\n            <input\n              [class]=\"cx('checkbox')\"\n              type=\"checkbox\"\n              value=\"{{state.value.name}}\"\n              [checked]=\"state.value.isRefined\"\n            />\n\n            <span [class]=\"cx('labelText')\">\n              {{label || state.value.name}}\n            </span>\n\n            <span [class]=\"cx('count')\">{{state.value.count}}</span>\n          </label>\n        </li>\n      </ul>\n    </div>\n  `,\n})\nexport class NgAisToggle extends BaseWidget {\n  // connector options\n  @Input() public attribute: string;\n  @Input() public label: string;\n  @Input()\n  public values: { on?: boolean; off?: boolean } = { on: true, off: undefined };\n\n  public state: ToggleState = {\n    createURL: noop,\n    refine: noop,\n    value: {},\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('ToggleRefinement');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectToggle, {\n      attributeName: this.attribute,\n      label: this.label,\n      values: this.values,\n    });\n    super.ngOnInit();\n  }\n\n  public handleClick(event: MouseEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.state.refine(this.state.value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisToggle } from './toggle';\n\n@NgModule({\n  declarations: [NgAisToggle],\n  entryComponents: [NgAisToggle],\n  exports: [NgAisToggle],\n  imports: [CommonModule],\n})\nexport class NgAisToggleModule {}\n","import { Inject, Component, Input, forwardRef } from '@angular/core';\n\nimport { connectRange } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { parseNumberInput, noop } from '../utils';\n\nexport type NumericRangeState = {\n  range: { min?: number; max?: number };\n  refine: Function;\n  start: number[];\n};\n\n@Component({\n  selector: 'ais-range-input',\n  template: `\n    <div [class]=\"cx()\">\n      <form\n        [class]=\"cx('form')\"\n        (submit)=\"handleSubmit($event)\"\n        novalidate\n      >\n        <label [class]=\"cx('label')\">\n          <span [class]=\"cx('currency')\">{{currency}}</span>\n          <input\n            [class]=\"cx('input', 'min')\"\n            type=\"number\"\n            [min]=\"state.range.min\"\n            [max]=\"state.range.max\"\n            [placeholder]=\"state.range.min\"\n            [value]=\"minInputValue\"\n            [step]=\"step\"\n            (change)=\"handleChange($event, 'min')\"\n          />\n        </label>\n\n        <span [class]=\"cx('separator')\">{{separator}}</span>\n\n        <label [class]=\"cx('label')\">\n          <span [class]=\"cx('currency')\">{{currency}}</span>\n          <input\n            [class]=\"cx('input', 'max')\"\n            type=\"number\"\n            [min]=\"state.range.min\"\n            [max]=\"state.range.max\"\n            [placeholder]=\"state.range.max\"\n            [value]=\"maxInputValue\"\n            [step]=\"step\"\n            (change)=\"handleChange($event, 'max')\"\n          />\n        </label>\n\n        <button\n          [class]=\"cx('submit')\"\n          (click)=\"handleSubmit($event)\"\n        >\n          {{submitLabel}}\n        </button>\n      </form>\n    </div>\n  `,\n})\nexport class NgAisRangeInput extends BaseWidget {\n  // render options\n  @Input() public currency: string = '$';\n  @Input() public separator: string = 'to';\n  @Input() public submitLabel: string = 'Go';\n\n  // connector options\n  @Input() public attribute: string;\n  @Input() public min?: number | string;\n  @Input() public max?: number | string;\n  @Input() public precision: number | string = 2;\n\n  // inner state\n  public minInputValue?: number | string = '';\n  public maxInputValue?: number | string = '';\n\n  get step() {\n    const precision = parseNumberInput(this.precision) || 2;\n    return 1 / Math.pow(10, precision);\n  }\n\n  public state: NumericRangeState = {\n    range: { min: undefined, max: undefined },\n    refine: noop,\n    start: [0, 0],\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('RangeInput');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectRange, {\n      attributeName: this.attribute,\n      max: parseNumberInput(this.max),\n      min: parseNumberInput(this.min),\n      precision: parseNumberInput(this.precision),\n    });\n\n    super.ngOnInit();\n  }\n\n  public handleChange(event: any, type: string) {\n    const value = parseNumberInput(event.target.value);\n\n    if (type === 'min') {\n      this.minInputValue = value;\n    } else {\n      this.maxInputValue = value;\n    }\n  }\n\n  public handleSubmit(event: MouseEvent | KeyboardEvent) {\n    event.preventDefault();\n    this.state.refine([this.minInputValue, this.maxInputValue]);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisRangeInput } from './range-input';\n\n@NgModule({\n  declarations: [NgAisRangeInput],\n  entryComponents: [NgAisRangeInput],\n  exports: [NgAisRangeInput],\n  imports: [CommonModule],\n})\nexport class NgAisRangeInputModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'ais-panel',\n  template: `\n    <div class=\"ais-Panel\">\n      <div *ngIf=\"header\" class=\"ais-Panel-header\">\n        {{header}}\n      </div>\n\n      <div class=\"ais-Panel-body\">\n        <ng-content></ng-content>\n      </div>\n\n      <div *ngIf=\"footer\" class=\"ais-Panel-footer\">\n        {{footer}}\n      </div>\n    </div>\n  `,\n})\nexport class NgAisPanel {\n  @Input() public header?: string;\n  @Input() public footer?: string;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisPanel } from './panel';\nexport { NgAisPanel } from './panel';\n\n@NgModule({\n  declarations: [NgAisPanel],\n  entryComponents: [NgAisPanel],\n  exports: [NgAisPanel],\n  imports: [CommonModule],\n})\nexport class NgAisPanelModule {}\n","import {\n  Component,\n  Input,\n  Inject,\n  forwardRef,\n  KeyValueDiffer,\n  KeyValueDiffers,\n  Testability,\n} from '@angular/core';\n\nimport { connectConfigure } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport {\n  NgAisInstantSearch,\n  SearchParameters,\n} from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\n@Component({\n  selector: 'ais-configure',\n  template: '',\n})\nexport class NgAisConfigure extends BaseWidget {\n  private internalSearchParameters: SearchParameters;\n  private differ: KeyValueDiffer<string, any>; // SearchParameters (I don't know how to get the values of the type)\n\n  public state: { refine: Function } = {\n    refine: noop,\n  };\n\n  constructor(\n    private differs: KeyValueDiffers,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('Configure');\n  }\n\n  @Input()\n  set searchParameters(values: SearchParameters) {\n    this.internalSearchParameters = values;\n    if (!this.differ && values) {\n      this.differ = this.differs.find(values).create();\n    }\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectConfigure, {\n      searchParameters: this.internalSearchParameters,\n    });\n    super.ngOnInit();\n  }\n\n  ngDoCheck() {\n    if (this.differ) {\n      const changes = this.differ.diff(this.internalSearchParameters);\n      if (changes) {\n        this.state.refine(this.internalSearchParameters);\n      }\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisConfigure } from './configure';\n\n@NgModule({\n  declarations: [NgAisConfigure],\n  entryComponents: [NgAisConfigure],\n  exports: [NgAisConfigure],\n  imports: [CommonModule],\n})\nexport class NgAisConfigureModule {}\n","import * as algoliasearchProxy from 'algoliasearch/index';\nimport * as encodeProxy from 'querystring-es3/encode';\n\nimport { VERSION } from './version';\n\n// AOT + Rollup workaround\n// https://github.com/rollup/rollup/issues/1267#issuecomment-296395734\n\nconst algoliasearch = algoliasearchProxy.default || algoliasearchProxy;\nconst encode = encodeProxy.default || encodeProxy;\n\nexport function createSSRAlgoliaClient({\n  httpClient,\n  HttpHeaders,\n  transferState,\n  makeStateKey,\n}) {\n  console.warn(\n    '`createSSRAlgoliaClient` is deprecated in favor of `createSSRSearchClient` to be plugged to `searchClient`.'\n  );\n\n  return (_, appId, apiKey) =>\n    createSSRSearchClient({\n      appId,\n      apiKey,\n      httpClient,\n      HttpHeaders,\n      transferState,\n      makeStateKey,\n    });\n}\n\nexport function createSSRSearchClient({\n  appId,\n  apiKey,\n  httpClient,\n  HttpHeaders,\n  transferState,\n  makeStateKey,\n}) {\n  const client = algoliasearch(appId, apiKey, {});\n  client.addAlgoliaAgent(`angular-instantsearch ${VERSION}`);\n\n  client._request = (rawUrl, opts) => {\n    let headers = new HttpHeaders();\n\n    headers = headers.set(\n      'content-type',\n      opts.method === 'POST'\n        ? 'application/x-www-form-urlencoded'\n        : 'application/json'\n    );\n\n    headers = headers.set('accept', 'application/json');\n\n    const url =\n      rawUrl + (rawUrl.includes('?') ? '&' : '?') + encode(opts.headers);\n\n    const transferStateKey = makeStateKey(`ngais(${opts.body})`);\n\n    if (transferState.hasKey(transferStateKey)) {\n      const resp = JSON.parse(transferState.get(transferStateKey, {}));\n      return Promise.resolve({\n        statusCode: resp.status,\n        body: resp.body,\n        headers: resp.headers,\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      httpClient\n        .request(opts.method, url, {\n          headers,\n          body: opts.body,\n          observe: 'response',\n        })\n        .subscribe(\n          resp => {\n            transferState.set(transferStateKey, JSON.stringify(resp));\n            resolve({\n              statusCode: resp.status,\n              body: resp.body,\n              headers: resp.headers,\n            });\n          },\n          resp =>\n            reject({\n              statusCode: resp.status,\n              body: resp.body,\n              headers: resp.headers,\n            })\n        );\n    });\n  };\n\n  return client;\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\n// Modules\nimport { NgAisBreadcrumbModule } from './breadcrumb/breadcrumb.module';\nexport { NgAisBreadcrumbModule };\nimport { NgAisClearRefinementsModule } from './clear-refinements/clear-refinements.module';\nexport { NgAisClearRefinementsModule };\nimport { NgAisCurrentRefinementsModule } from './current-refinements/current-refinements.module';\nexport { NgAisCurrentRefinementsModule };\nimport { NgAisHierarchicalMenuModule } from './hierarchical-menu/hierarchical-menu.module';\nexport { NgAisHierarchicalMenuModule };\nimport { NgAisHitsPerPageModule } from './hits-per-page/hits-per-page.module';\nexport { NgAisHitsPerPageModule };\nimport { NgAisHitsModule } from './hits/hits.module';\nexport { NgAisHitsModule };\nimport { NgAisInfiniteHitsModule } from './infinite-hits/infinite-hits.module';\nexport { NgAisInfiniteHitsModule };\nimport { NgAisInstantSearchModule } from './instantsearch/instantsearch.module';\nexport { NgAisInstantSearchModule };\nimport { NgAisMenuModule } from './menu/menu.module';\nexport { NgAisMenuModule };\nimport { NgAisNumericMenuModule } from './numeric-menu/numeric-menu.module';\nexport { NgAisNumericMenuModule };\nimport { NgAisNumericSelectorModule } from './numeric-selector/numeric-selector.module';\nexport { NgAisNumericSelectorModule };\nimport { NgAisPaginationModule } from './pagination/pagination.module';\nexport { NgAisPaginationModule };\nimport { NgAisRangeSliderModule } from './range-slider/range-slider.module';\nexport { NgAisRangeSliderModule };\nimport { NgAisRefinementListModule } from './refinement-list/refinement-list.module';\nexport { NgAisRefinementListModule };\nimport { NgAisSearchBoxModule } from './search-box/search-box.module';\nexport { NgAisSearchBoxModule };\nimport { NgAisSortByModule } from './sort-by/sort-by.module';\nexport { NgAisSortByModule };\nimport { NgAisRatingMenuModule } from './rating-menu/rating-menu.module';\nexport { NgAisRatingMenuModule };\nimport { NgAisStatsModule } from './stats/stats.module';\nexport { NgAisStatsModule };\nimport { NgAisToggleModule } from './toggle/toggle.module';\nexport { NgAisToggleModule };\nimport { NgAisHighlightModule } from './highlight/highlight.module';\nexport { NgAisHighlightModule };\nimport { NgAisRangeInputModule } from './range-input/range-input.module';\nexport { NgAisRangeInputModule };\nimport { NgAisPanelModule } from './panel/panel.module';\nexport { NgAisPanelModule };\nimport { NgAisConfigureModule } from './configure/configure.module';\nexport { NgAisConfigureModule };\n\n// Custom SSR algoliasearchClient\nimport {\n  createSSRAlgoliaClient,\n  createSSRSearchClient,\n} from './create-ssr-algolia-client';\nexport { createSSRAlgoliaClient, createSSRSearchClient };\n\nimport { parseServerRequest } from './parse-server-request';\nexport { parseServerRequest };\n\n// Custom widget with BaseWidget class\nimport { BaseWidget } from './base-widget';\nexport { BaseWidget };\n\nimport { NgAisInstantSearch } from './instantsearch/instantsearch';\nexport { NgAisInstantSearch };\n\nconst NGIS_MODULES = [\n  NgAisInstantSearchModule,\n  NgAisHitsModule,\n  NgAisSearchBoxModule,\n  NgAisClearRefinementsModule,\n  NgAisMenuModule,\n  NgAisPaginationModule,\n  NgAisRefinementListModule,\n  NgAisHitsPerPageModule,\n  NgAisSortByModule,\n  NgAisNumericSelectorModule,\n  NgAisNumericMenuModule,\n  NgAisStatsModule,\n  NgAisToggleModule,\n  NgAisInfiniteHitsModule,\n  NgAisCurrentRefinementsModule,\n  NgAisHierarchicalMenuModule,\n  NgAisRatingMenuModule,\n  NgAisRangeSliderModule,\n  NgAisBreadcrumbModule,\n  NgAisHighlightModule,\n  NgAisRangeInputModule,\n  NgAisPanelModule,\n  NgAisConfigureModule,\n];\n\n@NgModule({\n  exports: NGIS_MODULES,\n  imports: [NgAisInstantSearchModule.forRoot()],\n})\nexport class NgAisRootModule {}\n\n@NgModule({ imports: NGIS_MODULES, exports: NGIS_MODULES })\nexport class NgAisModule {\n  public static forRoot(): ModuleWithProviders {\n    return { ngModule: NgAisRootModule };\n  }\n}\n","import { AlgoliaSearchHelper } from 'algoliasearch-helper';\n\n// Transforms url query to SearchParameters\nexport function parseServerRequest(req: { url: string } | void) {\n  if (req && req.url && req.url.includes('?')) {\n    const query = req.url.split('?')[1];\n    return AlgoliaSearchHelper.getConfigurationFromQueryString(query);\n  }\n\n  return {};\n}\n"]}